五、使用pivot命令实现数据透视功能
def multiple_stocks(tickers):
    def data(ticker):
 		stocks = ts.get_k_data(ticker, start='2016-01-01', end='2017-07-01')
        stocks.set_index('date', inplace=True)
        # 原始数据中日期列里的数据形式上是日期，但并不是数据处理所需要的日期格式-因此需要将index列的日期转换成标准日期格式
        stocks.index = pd.to_datetime(stocks.index)
        return stocks
    datas = map(data, tickers)
    return pd.concat(datas, keys=tickers, names=['Tickers', 'Date'])


tickers = ['600030', '000001', '600426']
all_stocks = multiple_stocks(tickers)
print('通过函数运算同时获得多只股票信息：\n', all_stocks, '\n')
通过上述运算获得如下
通过函数运算同时获得多只股票信息：
                       open   close    high     low     volume    code
Tickers Date                                                         
600030  2016-01-04  17.905  16.225  17.905  16.169  1960583.0  600030
        2016-01-05  15.593  16.382  16.689  15.436  2333291.0  600030
        2016-01-06  16.290  16.642  16.846  15.965  1972783.0  600030
        2016-01-07  16.225  15.166  16.336  15.036   679037.0  600030
        2016-01-08  15.631  15.621  16.187  14.851  2979253.0  600030
...                    ...     ...     ...     ...        ...     ...
600426  2017-06-26  11.119  11.457  11.556  11.119   139088.0  600426
        2017-06-27  11.507  11.387  11.526  11.278   108085.0  600426
        2017-06-28  11.368  11.248  11.427  11.179    69909.0  600426
        2017-06-29  11.248  11.427  11.487  11.209   109894.0  600426
        2017-06-30  11.427  11.656  11.795  11.229   142906.0  600426

[1089 rows x 6 columns] 


close_price = all_stocks[['close']].reset_index()
print('reset_index之后的结果：\n', close_price, '\n')
reset_index之后的结果：
      Tickers       Date   close
0     600030 2016-01-04  16.225
1     600030 2016-01-05  16.382
2     600030 2016-01-06  16.642
3     600030 2016-01-07  15.166
4     600030 2016-01-08  15.621
...      ...        ...     ...
1084  600426 2017-06-26  11.457
1085  600426 2017-06-27  11.387
1086  600426 2017-06-28  11.248
1087  600426 2017-06-29  11.427
1088  600426 2017-06-30  11.656

[1089 rows x 3 columns] 
daily_close = close_price.pivot(index='Date', columns='Tickers', values='close')
print('输出数据透视处理后的daily_close：\n', daily_close, '\n')
输出数据透视处理后的daily_close：
 Tickers     000001  600030  600426
Date                              
2016-01-04   8.995  16.225   7.518
2016-01-05   9.075  16.382   7.552
2016-01-06   9.179  16.642   7.801
2016-01-07   8.709  15.166   7.049
2016-01-08   8.852  15.621   7.252
...            ...     ...     ...
2017-06-26   9.019  16.492  11.457
2017-06-27   9.077  16.349  11.387
2017-06-28   9.145  16.330  11.248
2017-06-29   9.145  16.330  11.427
2017-06-30   9.106  16.263  11.656

[363 rows x 3 columns] 


Process finished with exit code 0
